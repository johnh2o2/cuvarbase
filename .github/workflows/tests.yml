name: Tests

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy>=1.17 scipy>=1.3
        pip install pytest pytest-cov
    
    - name: Install package
      run: |
        pip install -e .
      continue-on-error: true  # PyCUDA may not install without CUDA
    
    - name: Run basic import test
      run: |
        python -c "import numpy; import scipy; print('Dependencies OK')"
      
    - name: Check code syntax
      run: |
        python -m py_compile cuvarbase/__init__.py
        python -m py_compile cuvarbase/core.py
        python -m py_compile cuvarbase/utils.py

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        pip install flake8
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 cuvarbase --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 cuvarbase --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      continue-on-error: true
